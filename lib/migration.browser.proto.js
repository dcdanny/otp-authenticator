'use strict'; // code generated by pbf v3.2.1

// Payload ========================================

var Payload = self.Payload = {};

Payload.read = function (pbf, end) {
    return pbf.readFields(Payload._readField, {otp_parameters: [], version: 0, batch_size: 0, batch_index: 0, batch_id: 0}, end);
};
Payload._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.otp_parameters.push(Payload.OtpParameters.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.version = pbf.readVarint(true);
    else if (tag === 3) obj.batch_size = pbf.readVarint(true);
    else if (tag === 4) obj.batch_index = pbf.readVarint(true);
    else if (tag === 5) obj.batch_id = pbf.readVarint(true);
};
Payload.write = function (obj, pbf) {
    if (obj.otp_parameters) for (var i = 0; i < obj.otp_parameters.length; i++) pbf.writeMessage(1, Payload.OtpParameters.write, obj.otp_parameters[i]);
    if (obj.version) pbf.writeVarintField(2, obj.version);
    if (obj.batch_size) pbf.writeVarintField(3, obj.batch_size);
    if (obj.batch_index) pbf.writeVarintField(4, obj.batch_index);
    if (obj.batch_id) pbf.writeVarintField(5, obj.batch_id);
};

Payload.Algorithm = {
    "ALGORITHM_UNSPECIFIED": {
        "value": 0,
        "options": {}
    },
    "ALGORITHM_SHA1": {
        "value": 1,
        "options": {}
    },
    "ALGORITHM_SHA256": {
        "value": 2,
        "options": {}
    },
    "ALGORITHM_SHA512": {
        "value": 3,
        "options": {}
    },
    "ALGORITHM_MD5": {
        "value": 4,
        "options": {}
    }
};

Payload.DigitCount = {
    "DIGIT_COUNT_UNSPECIFIED": {
        "value": 0,
        "options": {}
    },
    "DIGIT_COUNT_SIX": {
        "value": 1,
        "options": {}
    },
    "DIGIT_COUNT_EIGHT": {
        "value": 2,
        "options": {}
    }
};

Payload.OtpType = {
    "OTP_TYPE_UNSPECIFIED": {
        "value": 0,
        "options": {}
    },
    "OTP_TYPE_HOTP": {
        "value": 1,
        "options": {}
    },
    "OTP_TYPE_TOTP": {
        "value": 2,
        "options": {}
    }
};

// Payload.OtpParameters ========================================

Payload.OtpParameters = {};

Payload.OtpParameters.read = function (pbf, end) {
    return pbf.readFields(Payload.OtpParameters._readField, {secret: null, name: "", issuer: "", algorithm: 0, digits: 0, type: 0, counter: 0}, end);
};
Payload.OtpParameters._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.secret = pbf.readBytes();
    else if (tag === 2) obj.name = pbf.readString();
    else if (tag === 3) obj.issuer = pbf.readString();
    else if (tag === 4) obj.algorithm = pbf.readVarint();
    else if (tag === 5) obj.digits = pbf.readVarint();
    else if (tag === 6) obj.type = pbf.readVarint();
    else if (tag === 7) obj.counter = pbf.readVarint();
};
Payload.OtpParameters.write = function (obj, pbf) {
    if (obj.secret) pbf.writeBytesField(1, obj.secret);
    if (obj.name) pbf.writeStringField(2, obj.name);
    if (obj.issuer) pbf.writeStringField(3, obj.issuer);
    if (obj.algorithm) pbf.writeVarintField(4, obj.algorithm);
    if (obj.digits) pbf.writeVarintField(5, obj.digits);
    if (obj.type) pbf.writeVarintField(6, obj.type);
    if (obj.counter) pbf.writeVarintField(7, obj.counter);
};
